declare class Headers extends globalThis.Headers {
<<<<<<< HEAD
=======
  /** @deprecated Use [`.getSetCookie()`](https://developer.mozilla.org/en-US/docs/Web/API/Headers/getSetCookie) instead. */
>>>>>>> e700a9c4c717f14b8cdf29aee9cd1d442a8ad44a
  getAll?(key: 'set-cookie'): string[]
}

declare class Request extends globalThis.Request {
  readonly headers: Headers
  readonly duplex: string
}

declare class Response extends globalThis.Response {
  readonly headers: Headers
  static json(data: any, init?: ResponseInit): Response
}

type RequestInfo = string | Request | globalThis.Request
type RequestInit = globalThis.RequestInit
declare const fetchImplementation: (
  info: RequestInfo,
<<<<<<< HEAD
  init?: RequestInit
=======
  init?: RequestInit,
>>>>>>> e700a9c4c717f14b8cdf29aee9cd1d442a8ad44a
) => Promise<Response>

declare const FileConstructor: typeof File
declare const FormDataConstructor: typeof FormData
declare const WebSocketConstructor: typeof WebSocket

<<<<<<< HEAD
export { FileConstructor as File, FormDataConstructor as FormData, Headers, Request, RequestInfo, RequestInit, Response, WebSocketConstructor as WebSocket, fetchImplementation as fetch };
=======
export { FileConstructor as File, FormDataConstructor as FormData, Headers, Request, type RequestInfo, type RequestInit, Response, WebSocketConstructor as WebSocket, fetchImplementation as fetch };
>>>>>>> e700a9c4c717f14b8cdf29aee9cd1d442a8ad44a
