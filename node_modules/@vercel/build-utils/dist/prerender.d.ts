<<<<<<< HEAD
import type { File, HasField } from './types';
=======
import type { File, HasField, Chain } from './types';
>>>>>>> e700a9c4c717f14b8cdf29aee9cd1d442a8ad44a
import { Lambda } from './lambda';
interface PrerenderOptions {
    expiration: number | false;
    lambda?: Lambda;
    fallback: File | null;
    group?: number;
    bypassToken?: string | null;
    allowQuery?: string[];
    initialHeaders?: Record<string, string>;
    initialStatus?: number;
    passQuery?: boolean;
    sourcePath?: string;
    experimentalBypassFor?: HasField;
    experimentalStreamingLambdaPath?: string;
<<<<<<< HEAD
=======
    chain?: Chain;
>>>>>>> e700a9c4c717f14b8cdf29aee9cd1d442a8ad44a
}
export declare class Prerender {
    type: 'Prerender';
    expiration: number | false;
    lambda?: Lambda;
    fallback: File | null;
    group?: number;
    bypassToken: string | null;
    allowQuery?: string[];
    initialHeaders?: Record<string, string>;
    initialStatus?: number;
    passQuery?: boolean;
    sourcePath?: string;
    experimentalBypassFor?: HasField;
    experimentalStreamingLambdaPath?: string;
<<<<<<< HEAD
    constructor({ expiration, lambda, fallback, group, bypassToken, allowQuery, initialHeaders, initialStatus, passQuery, sourcePath, experimentalBypassFor, experimentalStreamingLambdaPath, }: PrerenderOptions);
=======
    chain?: Chain;
    constructor({ expiration, lambda, fallback, group, bypassToken, allowQuery, initialHeaders, initialStatus, passQuery, sourcePath, experimentalBypassFor, experimentalStreamingLambdaPath, chain, }: PrerenderOptions);
>>>>>>> e700a9c4c717f14b8cdf29aee9cd1d442a8ad44a
}
export {};
